#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ S16-Leads
"""

import os
import stat
from pathlib import Path
import subprocess
import sys

def check_file_permissions(file_path):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É"""
    try:
        st = os.stat(file_path)
        mode = stat.S_IMODE(st.st_mode)
        return mode == 0o600
    except FileNotFoundError:
        return False

def check_git_ignored(file_path):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª git"""
    try:
        result = subprocess.run(
            ['git', 'check-ignore', file_path],
            capture_output=True,
            text=True
        )
        return result.returncode == 0
    except FileNotFoundError:
        print("‚ö†Ô∏è  Git –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ S16-Leads\n")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞:")
    if os.path.exists('.env'):
        if check_git_ignored('.env'):
            print("   ‚úÖ .env —Ñ–∞–π–ª –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è git")
        else:
            print("   ‚ùå .env —Ñ–∞–π–ª –ù–ï –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è git!")
        if check_file_permissions('.env'):
            print("   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (600)")
        else:
            print("   ‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∞ 600")
    else:
        print("   ‚ö†Ô∏è  .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:")
    sessions_dir = Path("data/sessions")
    if sessions_dir.exists():
        session_files = list(sessions_dir.glob("*.session"))
        if session_files:
            for session_file in session_files:
                if check_git_ignored(str(session_file)):
                    print(f"   ‚úÖ {session_file.name} –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è git")
                else:
                    print(f"   ‚ùå {session_file.name} –ù–ï –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è git!")
                
                if check_file_permissions(session_file):
                    print(f"   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è {session_file.name}")
                else:
                    print(f"   ‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∞ 600 –¥–ª—è {session_file.name}")
        else:
            print("   ‚ÑπÔ∏è  –°–µ—Å—Å–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    else:
        print("   ‚ÑπÔ∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è sessions –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram:")
    try:
        import asyncio
        from src.infra.tele_client import test_connection

        success = asyncio.run(test_connection())
        if success:
            print("   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram —É—Å–ø–µ—à–Ω–æ")
        else:
            print("   ‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram –Ω–µ —É–¥–∞–ª–æ—Å—å (—Å–º. –≤—ã–≤–æ–¥ –≤—ã—à–µ)")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
    try:
        import telethon
        print(f"   ‚úÖ Telethon —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≤–µ—Ä—Å–∏—è: {telethon.__version__})")
    except ImportError:
        print("   ‚ùå Telethon –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    try:
        import dotenv
        print("   ‚úÖ python-dotenv —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("   ‚ùå python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("- –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt --upgrade")
    print("- –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞: chmod 600 data/sessions/*.session")
    print("- –ù–µ –¥–µ–ª–∏—Ç–µ—Å—å —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏")
    print("- –•—Ä–∞–Ω–∏—Ç–µ API –∫–ª—é—á–∏ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ")

if __name__ == "__main__":
    main() 