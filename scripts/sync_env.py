#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ .env —Ñ–∞–π–ª–∞
==============================

–î–æ–±–∞–≤–ª—è–µ—Ç –≤ .env –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–ª—é—á–∏ –∏–∑ env.sample
"""

import os
import sys


def sync_env():
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å .env —Å env.sample"""
    
    env_sample = {}
    env_current = {}
    
    # –ß–∏—Ç–∞–µ–º .env.sample
    try:
        with open('.env.sample', 'r') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key = line.split('=')[0].strip()
                    env_sample[key] = line
    except FileNotFoundError:
        print('‚ùå .env.sample not found!')
        sys.exit(1)
    
    # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π .env
    try:
        with open('.env', 'r') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key = line.split('=')[0].strip()
                    env_current[key] = True
    except FileNotFoundError:
        # .env –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –æ–Ω –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω
        pass
    
    # –ò—â–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–ª—é—á–∏
    missing_keys = []
    for key in env_sample:
        if key not in env_current:
            missing_keys.append((key, env_sample[key]))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–ª—é—á–∏
    if missing_keys:
        print(f'üìã Found {len(missing_keys)} missing keys:')
        with open('.env', 'a') as f:
            f.write('\n# Added by make sync-env\n')
            for key, line in missing_keys:
                print(f'  + {key}')
                f.write(line + '\n')
        print('‚úÖ Missing keys added to .env')
    else:
        print('‚úÖ .env is up to date with .env.sample')


if __name__ == '__main__':
    sync_env() 