#!/usr/bin/env python3
"""
Setup —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω—Ç–∏-—Å–ø–∞–º —Å–∏—Å—Ç–µ–º—ã S16-leads
–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
"""

import os
import sys
import subprocess
from pathlib import Path

def run_command(cmd: str, description: str) -> bool:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"üîß {description}...")
    try:
        result = subprocess.run(cmd, shell=True, check=True, capture_output=True, text=True)
        print(f"‚úÖ {description} - OK")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå {description} - FAILED")
        print(f"   Error: {e.stderr}")
        return False

def setup_anti_spam_system():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    print("üõ°Ô∏è –£–°–¢–ê–ù–û–í–ö–ê –ê–ù–¢–ò-–°–ü–ê–ú –°–ò–°–¢–ï–ú–´ S16-LEADS")
    print("=" * 60)
    
    project_root = Path(__file__).parent.parent
    os.chdir(project_root)
    
    success_count = 0
    total_steps = 8
    
    # 1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ development dependencies
    if run_command("make dev-install", "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ development dependencies"):
        success_count += 1
    
    # 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ pre-commit hooks
    if run_command("make pre-commit-setup", "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ pre-commit hooks"):
        success_count += 1
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω—Ç–∏-—Å–ø–∞–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
    if run_command("python scripts/check_anti_spam_compliance.py", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω—Ç–∏-—Å–ø–∞–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è"):
        success_count += 1
    
    # 4. –ó–∞–ø—É—Å–∫ –ª–∏–Ω—Ç–µ—Ä–∞
    if run_command("make lint", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞"):
        success_count += 1
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    if run_command("make format-check", "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞"):
        success_count += 1
    
    # 6. –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
    if run_command("make test", "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"):
        success_count += 1
    
    # 7. Comprehensive audit
    if run_command("make telegram-api-audit", "–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞—É–¥–∏—Ç Telegram API"):
        success_count += 1
    
    # 8. Security check
    if run_command("make security-check", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"):
        success_count += 1
    
    print()
    print("=" * 60)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –£–°–¢–ê–ù–û–í–ö–ò: {success_count}/{total_steps}")
    
    if success_count == total_steps:
        print("‚úÖ –í–°–Ø –ê–ù–¢–ò-–°–ü–ê–ú –°–ò–°–¢–ï–ú–ê –£–°–¢–ê–ù–û–í–õ–ï–ù–ê –ò –†–ê–ë–û–¢–ê–ï–¢!")
        print()
        print("üéØ –î–û–°–¢–£–ü–ù–´–ï –ö–û–ú–ê–ù–î–´:")
        print("  make anti-spam-check    - –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω—Ç–∏-—Å–ø–∞–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è")
        print("  make dev-check          - –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º")
        print("  make check-all          - –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (CI pipeline)")
        print("  make telegram-api-audit - –ê—É–¥–∏—Ç Telegram API –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
        print("  make help-security      - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –≤—Å–µ–º security –∫–æ–º–∞–Ω–¥–∞–º")
        print()
        print("ü™ù PRE-COMMIT HOOKS –ê–ö–¢–ò–í–ù–´:")
        print("  –ü—Ä–∏ –∫–∞–∂–¥–æ–º –∫–æ–º–º–∏—Ç–µ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è:")
        print("  - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω—Ç–∏-—Å–ø–∞–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è")
        print("  - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞")
        print("  - –õ–∏–Ω—Ç–∏–Ω–≥")
        print("  - Security scan")
        print()
        print("üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("  1. –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ docs/CODE_REVIEW_CHECKLIST.md")
        print("  2. –ò–∑—É—á–∏—Ç–µ docs/TELEGRAM_API_PATTERNS.md")
        print("  3. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ templates")
        print("  4. –†–µ–≥—É–ª—è—Ä–Ω–æ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ 'make telegram-api-audit'")
        
        return True
    else:
        print("‚ùå –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –° –û–®–ò–ë–ö–ê–ú–ò")
        print("üîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
        return False

def main():
    """Entry point"""
    if not setup_anti_spam_system():
        sys.exit(1)
    
    print()
    print("üéâ –ê–ù–¢–ò-–°–ü–ê–ú –°–ò–°–¢–ï–ú–ê S16-LEADS –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!")

if __name__ == "__main__":
    main()