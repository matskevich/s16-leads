#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö —á–∞—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
–ò–°–ü–û–õ–¨–ó–£–ï–¢ S16-leads –∞–Ω—Ç–∏-—Å–ø–∞–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
"""

import asyncio
from src.infra.tele_client import get_client
from src.infra.limiter import safe_call, get_rate_limiter
from src.core.group_manager import GroupManager
import logging

logger = logging.getLogger(__name__)

async def get_my_chats_with_details():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —á–∞—Ç–æ–≤ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π —á–µ—Ä–µ–∑ S16-leads –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã"""
    try:
        print("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ —á–µ—Ä–µ–∑ S16-leads –∞–Ω—Ç–∏-—Å–ø–∞–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã...\n")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º rate limiter
        client = get_client()
        await client.start()
        rate_limiter = get_rate_limiter()
        manager = GroupManager(client)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–∏–∞–ª–æ–≥–æ–≤ —á–µ—Ä–µ–∑ safe_call
        print("üì° –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–æ–≤ —á–µ—Ä–µ–∑ safe_call...")
        dialogs_list = []
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º safe_call –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–≤
        async def get_dialogs():
            dialogs = []
            async for dialog in client.iter_dialogs():
                dialogs.append(dialog)
            return dialogs
        
        dialogs = await safe_call(get_dialogs, operation_type="api")
        
        print("üìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —á–∞—Ç–æ–≤:\n")
        print("ID".ljust(15) + " | " + "–¢–∏–ø".ljust(10) + " | " + "–£—á–∞—Å—Ç–Ω–∏–∫–∏".ljust(10) + " | " + "–ù–∞–∑–≤–∞–Ω–∏–µ")
        print("-" * 100)
        
        groups_data = []
        
        for dialog in dialogs:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —á–∞—Ç–∞
            if dialog.is_user:
                chat_type = "üë§ –õ–∏—á–Ω—ã–π"
                participants_count = "-"
            elif dialog.is_group:
                chat_type = "üë• –ì—Ä—É–ø–ø–∞"
                # –î–ª—è –≥—Ä—É–ø–ø –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ GroupManager (—Å –∞–Ω—Ç–∏-—Å–ø–∞–º –∑–∞—â–∏—Ç–æ–π)
                try:
                    group_info = await manager.get_group_info(dialog.id)
                    participants_count = str(group_info.get('participants_count', '?')) if group_info else "?"
                    if group_info:
                        groups_data.append({
                            'id': dialog.id,
                            'title': dialog.title,
                            'participants_count': group_info.get('participants_count', 0),
                            'type': 'group'
                        })
                except Exception as e:
                    logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ {dialog.id}: {e}")
                    participants_count = "?"
            elif dialog.is_channel:
                chat_type = "üì¢ –ö–∞–Ω–∞–ª"
                # –î–ª—è –∫–∞–Ω–∞–ª–æ–≤ —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ GroupManager
                try:
                    channel_info = await manager.get_group_info(dialog.id)
                    participants_count = str(channel_info.get('participants_count', '?')) if channel_info else "?"
                    if channel_info:
                        groups_data.append({
                            'id': dialog.id,
                            'title': dialog.title,
                            'participants_count': channel_info.get('participants_count', 0),
                            'type': 'channel'
                        })
                except Exception as e:
                    logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ {dialog.id}: {e}")
                    participants_count = "?"
            else:
                chat_type = "‚ùì –î—Ä—É–≥–æ–π"
                participants_count = "-"
            
            # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            chat_id = str(dialog.id)
            title = dialog.title[:40] if dialog.title else "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –Ω–∞–∑–≤–∞–Ω–∏—è
            
            print(f"{chat_id.ljust(15)} | {chat_type.ljust(10)} | {participants_count.ljust(10)} | {title}")
        
        print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(dialogs)} —á–∞—Ç–æ–≤")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ rate limiter
        stats = rate_limiter.get_stats()
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–Ω—Ç–∏-—Å–ø–∞–º: API –≤—ã–∑–æ–≤–æ–≤: {stats['api_calls']}, FLOOD_WAIT: {stats['flood_waits']}")
        
        await client.disconnect()
        return groups_data
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —á–∞—Ç–æ–≤: {e}")
        return []

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º S16-leads –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤"""
    groups_data = await get_my_chats_with_details()
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–ø–ø–∞—Ö
    if groups_data:
        print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ì–†–£–ü–ü –ò –ö–ê–ù–ê–õ–û–í:")
        print(f"–í—Å–µ–≥–æ –≥—Ä—É–ø–ø/–∫–∞–Ω–∞–ª–æ–≤: {len(groups_data)}")
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        groups_data.sort(key=lambda x: x.get('participants_count', 0), reverse=True)
        
        print(f"\nüîù –¢–û–ü-10 –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º:")
        for i, group in enumerate(groups_data[:10], 1):
            title = group['title'][:35]
            participants = group.get('participants_count', 0)
            group_type = "üè¢" if group['type'] == 'channel' else "üë•"
            print(f"   {i:2d}. {group_type} {title} - {participants} —á–µ–ª.")

if __name__ == "__main__":
    asyncio.run(main()) 